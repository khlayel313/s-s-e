{"version":3,"sources":["assets/notfound.png","assets/loader.gif","components/SeriesCard/SeriesCard.js","components/SeriesList/index.js","components/Loader/index.js","containers/series/index.js","containers/SingleSeries/index.js","components/Main/index.js","components/intro/intro.jsx","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","SeriesCard","props","console","log","toShow","serie","show","summary","substring","Card","className","style","width","image","to","id","Img","variant","src","original","notfound","alt","name","Body","Title","Text","as","dangerouslySetInnerHTML","__html","Button","href","rating","average","SeriesList","Row","list","map","series","Col","key","Loader","loaderSrc","Series","state","seriesName","isFetching","SearchSeries","e","setState","target","value","fetch","then","response","json","jso","this","Container","Form","Group","controlId","Control","type","onChange","length","trim","Component","SingleSeries","match","params","genres","genre","officialSite","premiered","_embedded","episodes","language","status","Main","exact","path","component","Intro","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","Link","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1b37a2a5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/notfound.300f4a6f.png\";","module.exports = __webpack_public_path__ + \"static/media/loader.baeaf0c7.gif\";","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport {Card, Button} from 'react-bootstrap'\r\nimport notfound from '../../assets/notfound.png'\r\n\r\n\r\nconst SeriesCard = (props) => {\r\n    console.log(props)\r\n    let toShow = '';\r\n    if(props.serie.show.summary)\r\n    {\r\n        toShow  = props.serie.show.summary.substring(0,100)+\"...\"; \r\n    }\r\n   \r\n    \r\n    return (\r\n        <Card className=\"h-100 \"  style={{ width: '15rem' }}>\r\n              {props.serie.show.image && <Link to={`/series/${props.serie.show.id}`}><Card.Img variant=\"top\" src={props.serie.show.image.original} /></Link> } \r\n                {!props.serie.show.image && <Card.Img variant=\"top\" src={notfound} alt={props.serie.show.name} /> }\r\n            <Card.Body>\r\n                <Card.Title>\r\n                    <Link to={`/series/${props.serie.show.id}`}>\r\n                    {props.serie.show.name}\r\n                    </Link>\r\n                </Card.Title>\r\n                <Card.Text as=\"div\">\r\n                <div dangerouslySetInnerHTML={{__html: toShow }} />                   \r\n                </Card.Text>\r\n                <Button  href={`/series/${props.serie.show.id}`} variant=\"primary\">Show More </Button>\r\n                \r\n                {props.serie.show.rating.average && <div className=\"rating\">&#9733; {props.serie.show.rating.average}/10</div>}\r\n                \r\n            </Card.Body>\r\n           \r\n            \r\n            \r\n            \r\n        </Card>\r\n                \r\n       \r\n    )\r\n}\r\n\r\nexport default SeriesCard","import React from 'react';\r\nimport SeriesCard from '../SeriesCard/SeriesCard'\r\nimport {Row,Col} from 'react-bootstrap'\r\n\r\nconst SeriesList = (props) => {\r\n    console.log(props)\r\n    return (\r\n        <Row>\r\n            {props.list.map(series => (\r\n                <Col className=\"col-lg-3 col-md-6 mb-3\" key={series.show.id} ><SeriesCard serie={series} /> </Col>\r\n            ))}\r\n       </Row>\r\n    )\r\n}\r\n\r\nexport default SeriesList","import React from 'react';\r\nimport loaderSrc from '../../assets/loader.gif'\r\n\r\nconst Loader = (props) => {\r\n    return (\r\n        <div><img alt=\"loader icon\" width=\"200\" src={loaderSrc} /></div>\r\n    )\r\n}\r\n\r\nexport default Loader","import React, {Component} from 'react';\r\nimport SeriesList from '../../components/SeriesList/index'\r\nimport Loader from '../../components/Loader/index'\r\nimport {Container, Row, Form} from 'react-bootstrap'\r\n\r\nclass Series extends Component {\r\n    state = {\r\n        series: [],\r\n        seriesName: '',\r\n        isFetching: false\r\n      }\r\n    \r\n      SearchSeries = e => {\r\n          this.setState({seriesName: e.target.value, isFetching: true})\r\n        fetch(`http://api.tvmaze.com/search/shows?q=${e.target.value}`)\r\n        .then(response => response.json())\r\n        //.then(json => console.log(json) )\r\n        .then(jso => this.setState({series: jso, isFetching: false}) )\r\n      }\r\n    \r\n    render() {\r\n        const {series,seriesName,isFetching} = this.state;\r\n        return(\r\n           \r\n            <Container className=\"add_top_100\">\r\n                \r\n                <Row className=\"add_top_30\">\r\n                <div className=\"col-lg-12\">\r\n                <Row className=\"add_top_30\">\r\n                <h1 className=\"w-100\">Series Search Engine</h1>   \r\n                <div className=\"w-100 center\">\r\n                <Form>\r\n                    <Form.Group controlId=\"search\">                        \r\n                        <Form.Control type=\"search\" value={seriesName} onChange={this.SearchSeries}  />                    \r\n                    </Form.Group>    \r\n                </Form>       \r\n                </div>\r\n               \r\n                {\r\n                !isFetching && series.length === 0 && seriesName.trim()===''\r\n                && <p className=\"center\" >Please enter series name</p>\r\n                }\r\n                {\r\n                !isFetching && series.length === 0 && seriesName.trim() !== ''\r\n                && <p className=\"center\">No Tv series found</p>\r\n                }\r\n                {\r\n                    isFetching && <Loader></Loader>\r\n                }\r\n                 {\r\n                    !isFetching &&  <SeriesList list={this.state.series}></SeriesList>\r\n                }\r\n                </Row>\r\n                </div>\r\n                </Row>\r\n               </Container>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Series","import React, {Component} from 'react';\r\nimport Loader from '../../components/Loader/index'\r\nimport {Container, Row} from 'react-bootstrap'\r\nimport notfound from '../../assets/notfound.png'\r\nclass SingleSeries extends Component {\r\n\r\n    state = {\r\n        show: null ,\r\n        isFetching: true\r\n      }\r\n\r\n      componentDidMount() {\r\n        this.setState({isFetching: true})\r\n        fetch(`http://api.tvmaze.com/shows/${this.props.match.params.id}?embed=episodes`)\r\n        .then(response => response.json())\r\n        //.then(json => console.log(json) )\r\n        .then(jso => this.setState({show: jso, isFetching: false}) )\r\n      }\r\n\r\n    render() {\r\n\r\n        const {show} = this.state;\r\n        console.log(show);\r\n        return (\r\n            <Container>\r\n               \r\n                <Row className=\"add_top_30\">\r\n                    {this.state.isFetching && <Loader></Loader>}\r\n                    {!this.state.isFetching && \r\n                    <div className=\"col-lg-6\">       \r\n                        <div className=\"my-4\">\r\n                            {show.image &&  <img className=\"img-fluid\" src={show.image.original} alt={show.name} /> }\r\n                            {!show.image && <img className=\"img-fluid\" src={notfound} alt={show.name} /> }          \r\n                            \r\n                        </div>\r\n                    </div>\r\n                    }\r\n                    \r\n                    {!this.state.isFetching &&\r\n                    <div className=\"col-lg-6\">\r\n                        <div className=\"card mt-4\">                   \r\n                            <div className=\"card-body\">\r\n                                <h3 className=\"card-title\">{show.name}</h3>\r\n                                \r\n                                <div className=\"card-text\"> \r\n                                    <h4>Summury</h4>\r\n                                    {show.summary &&  <div dangerouslySetInnerHTML={{__html: show.summary }} /> } \r\n                                </div>\r\n                                {!this.state.isFetching && show.genres && \r\n                                    <div>Genres :  {show.genres.map(genre => (\r\n                                    <span> {genre} </span> \r\n                                    ))}</div>  }\r\n                                \r\n                                {!this.state.isFetching && show.rating.average && <div>Rating : <span className=\"text-warning\">&#9733; </span> {show.rating.average}/10</div>  }\r\n                                \r\n                                {!this.state.isFetching && show.officialSite && <div>Official Site : <a target=\"_blank\" href={show.officialSite}>{show.officialSite}</a></div>  }\r\n                                \r\n                                {!this.state.isFetching && show.premiered && <div>premiered : {show.premiered}</div>  }\r\n                                \r\n                                {!this.state.isFetching && show._embedded.episodes && <div>Episodes : {show._embedded.episodes.length}</div>  }\r\n                                \r\n                                {!this.state.isFetching && show.language && <div>Language : {show.language}</div>  }\r\n                                \r\n                                {!this.state.isFetching && show.status && <div>Status : {show.status}</div>  }\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>  \r\n                    }\r\n                </Row>\r\n               \r\n              \r\n            </Container>\r\n           \r\n            \r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default SingleSeries\r\n","import React from 'react';\r\nimport {Switch, Route} from 'react-router-dom'\r\nimport Series from '../../containers/series/index'\r\nimport SingleSeries from '../../containers/SingleSeries'\r\nconst Main = props => {\r\n   return( <Switch>\r\n        <Route exact path=\"/\" component={Series} />\r\n        <Route exact path=\"/series/:id\" component={SingleSeries}  />\r\n    </Switch> )\r\n}\r\n\r\nexport default Main","import React from 'react'\r\nimport {Container,Navbar, Nav} from 'react-bootstrap'\r\nconst Intro = (props) => (    \r\n\r\n\r\n<Navbar bg=\"dark\" expand=\"lg\" className=\"navbar-dark\">\r\n  <Container>\r\n  <Navbar.Brand href=\"/\">Series Search Engine</Navbar.Brand>\r\n  <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n  <Navbar.Collapse id=\"basic-navbar-nav\">\r\n    <Nav className=\"ml-auto\">\r\n      <Nav.Link href=\"/\">Home</Nav.Link>\r\n       \r\n    </Nav>  \r\n  </Navbar.Collapse>\r\n  </Container>\r\n</Navbar>\r\n      \r\n)\r\n\r\nexport default Intro;","import React, {Component} from 'react';\nimport Main from '../Main/index'\nimport Intro from '../../components/intro/intro'\nimport './App.css';\n\nclass App extends Component {\n \n  render(){\n    return (\n    <div className=\"App\">\n      <Intro></Intro>\n      <Main></Main>\n      \n    </div>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport './App.scss';\nimport App from './components/App/App';\nimport {BrowserRouter} from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}